apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-user-mongo
spec:
  serviceName: ts-user-mongo
  selector:
    matchLabels:
      app: ts-user-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-user-mongo
        FDG-node-type: mongo
        online-service-system: train-ticket
        injectable: "true"
    spec:
      containers:
      - name: ts-user-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-auth-mongo
spec:
  serviceName: ts-auth-mongo
  selector:
    matchLabels:
      app: ts-auth-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-auth-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-auth-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-route-mongo
spec:
  serviceName: ts-route-mongo
  selector:
    matchLabels:
      app: ts-route-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-route-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-route-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-contacts-mongo
spec:
  serviceName: ts-contacts-mongo
  selector:
    matchLabels:
      app: ts-contacts-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-contacts-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-contacts-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-order-mongo
spec:
  serviceName: ts-order-mongo
  selector:
    matchLabels:
      app: ts-order-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-order-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-order-other-mongo
spec:
  serviceName: ts-order-other-mongo
  selector:
    matchLabels:
      app: ts-order-other-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-other-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-order-other-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-config-mongo
spec:
  serviceName: ts-config-mongo
  selector:
    matchLabels:
      app: ts-config-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-config-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-config-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-station-mongo
spec:
  serviceName: ts-station-mongo
  selector:
    matchLabels:
      app: ts-station-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-station-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-station-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 2000m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-train-mongo
spec:
  serviceName: ts-train-mongo
  selector:
    matchLabels:
      app: ts-train-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-train-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-train-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-travel-mongo
spec:
  serviceName: ts-travel-mongo
  selector:
    matchLabels:
      app: ts-travel-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-travel-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-travel2-mongo
spec:
  serviceName: ts-travel2-mongo
  selector:
    matchLabels:
      app: ts-travel2-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel2-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-travel2-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-price-mongo
spec:
  serviceName: ts-price-mongo
  selector:
    matchLabels:
      app: ts-price-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-price-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-price-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-security-mongo
spec:
  serviceName: ts-security-mongo
  selector:
    matchLabels:
      app: ts-security-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-security-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-security-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-inside-payment-mongo
spec:
  serviceName: ts-inside-payment-mongo
  selector:
    matchLabels:
      app: ts-inside-payment-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-inside-payment-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-inside-payment-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-payment-mongo
spec:
  serviceName: ts-payment-mongo
  selector:
    matchLabels:
      app: ts-payment-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-payment-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-payment-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-assurance-mongo
spec:
  serviceName: ts-assurance-mongo
  selector:
    matchLabels:
      app: ts-assurance-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-assurance-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-assurance-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-ticket-office-mongo
spec:
  serviceName: ts-ticket-office-mongo
  selector:
    matchLabels:
      app: ts-ticket-office-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-ticket-office-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-ticket-office-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216


---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-voucher-mysql
spec:
  serviceName: ts-voucher-mysql
  selector:
    matchLabels:
      app: ts-voucher-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-voucher-mysql
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mysql
    spec:
      containers:
      - name: ts-voucher-mysql
        image: mysql:5.6.35
        imagePullPolicy: IfNotPresent
        env:
        # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: root
        ports:
        - containerPort: 3306
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-food-map-mongo
spec:
  serviceName: ts-food-map-mongo
  selector:
    matchLabels:
      app: ts-food-map-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-map-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-food-map-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-consign-mongo
spec:
  serviceName: ts-consign-mongo
  selector:
    matchLabels:
      app: ts-consign-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-consign-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-consign-price-mongo
spec:
  serviceName: ts-consign-price-mongo
  selector:
    matchLabels:
      app: ts-consign-price-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-price-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-consign-price-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ts-food-mongo
spec:
  serviceName: ts-food-mongo
  selector:
    matchLabels:
      app: ts-food-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-mongo
        online-service-system: train-ticket
        injectable: "true"
        FDG-node-type: mongo
    spec:
      containers:
      - name: ts-food-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
      - name: mongo-exporter
        image: percona/mongodb_exporter:0.20
        args: [
            "--mongodb.uri=mongodb://localhost:27017",
            "--discovering-mode",
            "--compatible-mode",
        ]
        ports:
          - name: metrics
            containerPort: 9216

---
apiVersion: v1
kind: Service
metadata:
  name: ts-user-mongo 
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-user-mongo 

---
apiVersion: v1
kind: Service
metadata:
  name: ts-auth-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-auth-mongo
---

apiVersion: v1
kind: Service
metadata:
  name: ts-route-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-route-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-contacts-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-contacts-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-order-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-order-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-order-other-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-order-other-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-config-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-config-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-station-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-station-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-train-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-train-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-travel-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-travel-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-travel2-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-travel2-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-price-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-price-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-security-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-security-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-inside-payment-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-inside-payment-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-payment-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-payment-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-assurance-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-assurance-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-ticket-office-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-ticket-office-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-voucher-mysql
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 3306
  selector:
   app: ts-voucher-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-food-map-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-food-map-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-consign-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-consign-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-consign-price-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-consign-price-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-food-mongo
  labels:
    online-service-system: train-ticket
spec:
  ports:
    - port: 27017
  selector:
   app: ts-food-mongo